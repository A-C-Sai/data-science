Objective(s):

    - Retrieve Product:
        - image
        - name
        - rating
        - price
    

    BASIC FUNCTIONALITY:

    - Display in a Tabular form [DONE]
    
    Additional functionality [PENDING]: 
        - User may be able to filter by price range
        - User may be able to order by price [high to low]/[low to high] similarly with rating.

URL Anatomy:

    https://www.amazon.com.au/s?k={}&page={}

    k - will hold the value of our search query 
    page - indicates the page number (The aim is to loop through all pages and scrape the required data)

    Handling search queries with multiple words


Looping through pages:

    Upon Inspecting the first page and the last page of the search query, this is what I have found out: 

    Pg 1:

        - Search fo a <a> tag with aria-label="Go to next page".

    <a 
    href="/s?k=Iphone&amp;page=2&amp;crid=28LF6AIEVR2YZ&amp;qid=1707791477&amp;sprefix=phone%2Caps%2C289&amp;ref=sr_pg_1" aria-label="Go to next page, page 2"
    >
    Next
    </a>

    Last Pg:

        - The last page doesn't contain a <a> tag with aria-label="Go to next page" indicating we have reached the end of pages.


    <span class="s-pagination-item s-pagination-next s-pagination-disabled " aria-disabled="true">Next</span>

    KEY TO LOOPING THROUGH ALL PAGES:

        - identify if there exists an <a> tag with aria-label="Go to next page", if so the <a> also provides the link to the next 
          page in it's "href" attribute.
